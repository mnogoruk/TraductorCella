# Generated by Django 3.1.5 on 2021-03-13 12:58

import authentication.models
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this applicant has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('is_banned', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=200, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verifying_slug', models.SlugField(default=uuid.uuid4, editable=False, unique=True)),
                ('role', models.IntegerField(choices=[(40, 'Admin'), (30, 'Office worker'), (20, 'Storage_worker'), (10, 'Default')], default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this applicant belongs to. A applicant will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='applicant', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this applicant.', related_name='user_set', related_query_name='applicant', to='auth.Permission', verbose_name='applicant permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', authentication.models.UserManager()),
            ],
        ),
    ]
